{"version":3,"sources":["components/dashboard.js","components/controls.js","components/esssentialControls.js","components/exportToExcel.js","App.js","reportWebVitals.js","index.js"],"names":["Dashboard","props","state","editStandardHours","bind","this","setState","document","getElementById","readOnly","multiplierSection","editMultiplier","className","id","type","value","standardHours","onChange","onClick","SBHratio","toFixed","essentialPlannedHours","parseInt","additionalPlannedHours","React","Component","Controls","questions","text","minLabel","maxLabel","onSlide","handleMultiplierChange","event","multiplierChange","index","min","multiplier","max","width","height","viewBox","fill","xmlns","fill-rule","d","EssentialControls","updateValue","e","ExportToExcel","fileType","fileExtension","exportToCSV","wb","Sheets","XLSX","json_to_sheet","csvData","SheetNames","excelBuffer","bookType","data","Blob","FileSaver","fileName","App","sessionRecord","overestimatedHours","EssentialHours","handleNext","handlePrevious","handleStandardHoursChange","handleEditChange","handleEssentialChange","updateEssentialHours","updateStandardBaseHours","totalEssentialHours","forEach","item","target","newArray","additionalPlannedHours2","question","length","totalHours","push","standardLXPProjectHours","StandardBaseHoursRatio","question1","question2","question3","question4","question5","question6","question7","question8","question9","question10","question11","question12","question13","question14","question15","question16","question17","essential1","essential2","essential3","essential4","essential5","essential6","class","map","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.075b24cb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            editStandardHours: false\r\n        }\r\n\r\n        this.editStandardHours = this.editStandardHours.bind(this);\r\n    }\r\n\r\n    editStandardHours() {\r\n        this.setState({\r\n            editStandardHours: !this.state.editStandardHours\r\n        });\r\n\r\n        document.getElementById('standard-hours').readOnly = this.state.editStandardHours;\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    render() {\r\n        let multiplierSection = this.props.editMultiplier ? \"\" : \"hidden\";\r\n        return (\r\n            <section className=\"lxp-dashboard jumbotron container\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"alert alert-info row\">\r\n                            <label className=\"display-9 col-5\">Starting hours for a standard LXP Project: <b></b></label>\r\n                            <input id=\"standard-hours\" className=\"form-control col-2\" type=\"text\" value={this.props.standardHours} onChange={this.props.onChange} readOnly /> \r\n                            <div className=\"col-5\">\r\n                                <button className={this.state.editStandardHours ? \"btn btn-info \" + multiplierSection : \"btn btn-light \" + multiplierSection} \r\n                                    onClick={this.editStandardHours}>\r\n                                        edit\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"row\">\r\n                            <label className=\"col-5\">Ratio of stardard base hours to actual (aim for 1)</label>\r\n                            <input className=\"form-control col-2\" type=\"text\" value={this.props.SBHratio.toFixed(3)} readOnly=\"readonly\" />\r\n                        </div>\r\n                        <h3>Essential hours</h3>\r\n                        <div className=\"row\">\r\n                            <label className=\"col-3\">planned:</label>\r\n                            <input className=\"form-control col-3\" type=\"text\" value={this.props.essentialPlannedHours} readOnly=\"readonly\" />\r\n                        </div>\r\n                        <h3>Additional hours</h3>\r\n                        <div className=\"row\">\r\n                            <label className=\"col-3\">Actual:</label>\r\n                            <input className=\"form-control col-3\" type=\"text\" value={parseInt(this.props.additionalPlannedHours)} readOnly=\"readonly\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\n\r\nclass Controls extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            questions: [\r\n\r\n                {\r\n                    text: \"Degree of Live Delivery to Students\",\r\n                    minLabel: \"Synchronous delivery\",\r\n                    maxLabel: \"Asynchronous delivery\"\r\n                },\r\n                {\r\n                    text: \"Is Assessment required to be built?\",\r\n                    minLabel: \"No assessment are featured\",\r\n                    maxLabel: \"Much work on multiple assessments\"\r\n                },\r\n                {\r\n                    text: \"Describe the information load \",\r\n                    minLabel: \"Learning involves lots of inquiry, student discovery\",\r\n                    maxLabel: \"Learning involves lots of study materials\"\r\n                },\r\n                {\r\n                    text: \"Describe the expected student navigation of materials\",\r\n                    minLabel: \"Students navigate in a self-directed way\",\r\n                    maxLabel: \"A learning map or approach is provided (structured curricula)\"\r\n                },\r\n                {\r\n                    text: \"Describe the future intentions of this subject/course\",\r\n                    minLabel: \"Learning will be one-off\",\r\n                    maxLabel: \"Learning will be reissued\"\r\n                },\r\n                {\r\n                    text: \"Are students expected to work\",\r\n                    minLabel: \"Mostly independently\",\r\n                    maxLabel: \"In groups/collaborative tasks\"\r\n                },\r\n                {\r\n                    text: \"In regards to those delivering the course/subject\",\r\n                    minLabel: \"There is a sole SME/academic\",\r\n                    maxLabel: \"There is a large SME/academic delivery team\"\r\n                },\r\n                {\r\n                    text: \"Content is expected to be\",\r\n                    minLabel: \"Short, short cycle and minimal text-based activities\",\r\n                    maxLabel: \"Long, long-format with large amounts of readings\"\r\n                },\r\n                {\r\n                    text: \"Is the cohort size\",\r\n                    minLabel: \"15 learners or under\",\r\n                    maxLabel: \"150+ learners\"\r\n                },\r\n                {\r\n                    text: \"Describe the media mix\",\r\n                    minLabel: \"Mostly spoken or rich media (video)\",\r\n                    maxLabel: \"Mostly textual elements, written activities & quizzes\"\r\n                },\r\n                {\r\n                    text: \"Describe the reliance on existing content \",\r\n                    minLabel: \"Lots of existing content\",\r\n                    maxLabel: \"Starting with a blank page\"\r\n                },\r\n                {\r\n                    text: \"Generally, how comfortable are SMEs/academics with technology?\",\r\n                    minLabel: \"Very comfortable, or expert\",\r\n                    maxLabel: \"Less familiar, first time\"\r\n                },\r\n                {\r\n                    text: \"Generally, how comfortable are students/learners with technology?\",\r\n                    minLabel: \"Very comfortable, or expert\",\r\n                    maxLabel: \"Less familiar, first time\"\r\n                },\r\n                {\r\n                    text: \"What is the outcome of the learning programme?\",\r\n                    minLabel: \"The learning is not accredited or warranted\",\r\n                    maxLabel: \"The learning is accredited and warrant is essential\"\r\n                },\r\n                {\r\n                    text: \"Describe the intended audience of the learning experience\",\r\n                    minLabel: \"pre-university, or undergraduate\",\r\n                    maxLabel: \"Post-experience, professional\"\r\n                },\r\n                {\r\n                    text: \"To what degree are other organisations or departments involved? \",\r\n                    minLabel: \"There are no other stakeholders or schools involved\",\r\n                    maxLabel: \"There are many other organisations or schools/faculties involved\"\r\n                },\r\n                {\r\n                    text: \"How is the term for delivery best defined?\",\r\n                    minLabel: \"Pre-defined and set to a schedule\",\r\n                    maxLabel: \"Flexible and open, students can choose when to explore, submit\"\r\n                }\r\n\r\n            ]\r\n        }\r\n\r\n        this.onSlide = this.onSlide.bind(this);\r\n        this.handleMultiplierChange = this.handleMultiplierChange.bind(this);\r\n\r\n    }\r\n\r\n    onSlide(event){\r\n        this.props.onSlide(event)\r\n    }\r\n\r\n    handleMultiplierChange(event) {\r\n        this.props.multiplierChange(event)\r\n    }\r\n\r\n    render() {\r\n        let multiplierSection = this.props.editMultiplier ? \"\" : \" hidden\";\r\n        return (\r\n            <div>\r\n                <h3 className=\"display-7\">Needs analysis</h3>\r\n                <label className=\"lead \">{this.state.questions[this.props.index].text}</label>    \r\n                <div className=\"row\">\r\n                    <div className=\"col-5\"></div>\r\n                    <p className=\"col-2 alert alert-info\" >hours : {this.props.value > 0 ? \"+\" : \"\"}{this.props.value}</p>                        \r\n                    <div className=\"col-5\"></div>\r\n                </div>\r\n                         \r\n                <div className=\"row lxp-question\">  \r\n                    <label className=\"col-5 lxp-label-left\">{this.state.questions[this.props.index].minLabel}</label> \r\n                    <input \r\n                    id=\"slider1\" \r\n                    className=\"form-control col-2\" \r\n                    type=\"range\" \r\n                    min={\"-\" + (this.props.multiplier * 10)} \r\n                    max={(this.props.multiplier * 10) + \"\"}  \r\n                    value={this.props.value} \r\n                    onChange={this.onSlide} />\r\n                    <label className=\"col-5 lxp-question-lr\">{this.state.questions[this.props.index].maxLabel}</label>  \r\n                    \r\n                    <div className={\"row lxp-multipler-btn col-4 \" + multiplierSection}>\r\n                        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-plus-circle col-xl-3\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\r\n                            <path fill-rule=\"evenodd\" d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\r\n                        </svg>\r\n                        <label className=\" lxp-question-lr\">multiplier </label>\r\n                        <input id=\"mul1\" \r\n                        type=\"text\" \r\n                        className=\"form-control col-xl-3\" \r\n                        value={this.props.multiplier} \r\n                        onChange={this.props.multiplierChange} />\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Controls;","import { render } from '@testing-library/react';\r\nimport React from 'react';\r\n\r\nclass EssentialControls extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            questions: [\r\n                \"Base Learning Design\",\r\n                \"Project Management\",\r\n                \"Development Work\",\r\n                \"QA\",\r\n                \"Media and Video Production\",\r\n                \"Graphic Design\"\r\n            ]\r\n        }\r\n\r\n        this.updateValue = this.updateValue.bind(this);\r\n    }\r\n\r\n    updateValue(e) {\r\n        this.props.onChange(this.props.index, e)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <label className=\"col-xl-3\">{this.state.questions[this.props.index]}</label>\r\n                <input className=\"form-control col-xl-3\" \r\n                type=\"text\" \r\n                id={\"essentialInput\" + (this.props.index + 1)} \r\n                value={this.props.value} \r\n                onChange={this.updateValue} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default EssentialControls;","import React from 'react'\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nexport default class ExportToExcel extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8',\r\n            fileExtension: '.xlsx'\r\n        }\r\n\r\n        this.exportToCSV = this.exportToCSV.bind(this);\r\n    };\r\n\r\n    exportToCSV () {\r\n        const ws = XLSX.utils.json_to_sheet(this.props.csvData);\r\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n        const data = new Blob([excelBuffer], {type: this.state.fileType});\r\n        FileSaver.saveAs(data, this.props.fileName + this.state.fileExtension);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button className=\"btn btn-success\" onClick={ this.exportToCSV }>Export</button>\r\n        )\r\n    }\r\n}","import Dashboard from './components/dashboard.js';\nimport Controls from './components/controls.js';\nimport EssentialControls from './components/esssentialControls';\nimport './App.css';\nimport React from 'react';\nimport ExportToExcel from './components/exportToExcel.js';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sessionRecord: [],\n      standardHours: 120.00,\n      index: 0,\n      editMultiplier: false,\n      SBHratio: 0,\n      overestimatedHours: 0,\n      essentialPlannedHours: 0,\n      additionalPlannedHours: 0,\n      questions: [\n        { value: 0, multiplier: 1.5 },\n        { value: 0, multiplier: 1.3 },\n        { value: 0, multiplier: 1.3 },\n        { value: 0, multiplier: 0.5 },\n        { value: 0, multiplier: 0.5 },\n        { value: 0, multiplier: 0.3 },\n        { value: 0, multiplier: 1 },\n        { value: 0, multiplier: 1.3 },\n        { value: 0, multiplier: 0.5 },\n        { value: 0, multiplier: 1.1 },\n        { value: 0, multiplier: 1.5 },\n        { value: 0, multiplier: 1 },\n        { value: 0, multiplier: 1},\n        { value: 0, multiplier: 0.4 },\n        { value: 0, multiplier: 0.5 },\n        { value: 0, multiplier: 1 },\n        { value: 0, multiplier: 0.4 }\n      ],\n      EssentialHours: [65, 20, 30, 10, 50, 20]\n    }\n\n    this.onSlide = this.onSlide.bind(this);\n    this.handleNext = this.handleNext.bind(this);\n    this.handlePrevious = this.handlePrevious.bind(this);\n    this.handleMultiplierChange = this.handleMultiplierChange.bind(this);\n    this.handleStandardHoursChange = this.handleStandardHoursChange.bind(this);\n    this.handleEditChange = this.handleEditChange.bind(this);\n    this.handleEssentialChange = this.handleEssentialChange.bind(this);\n\n    this.updateEssentialHours = this.updateEssentialHours.bind(this);\n    this.updateStandardBaseHours = this.updateStandardBaseHours.bind(this);\n    this.sessionRecord = this.sessionRecord.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateEssentialHours();\n  }\n\n  updateStandardBaseHours() {\n    this.setState({\n      SBHratio: this.state.standardHours/ (this.state.essentialPlannedHours + this.state.additionalPlannedHours )\n    }, this.sessionRecord());\n  }\n\n  updateEssentialHours() {\n    let totalEssentialHours = 0;\n    this.state.EssentialHours.forEach((item) => {\n      totalEssentialHours = totalEssentialHours + item;\n    })\n    this.setState({ essentialPlannedHours: totalEssentialHours }, this.updateStandardBaseHours)\n    \n  }\n\n  handleStandardHoursChange(event) {\n    this.setState({\n      standardHours : event.target.value\n    }, this.updateStandardBaseHours);\n    \n  }\n\n  handleEditChange() {\n    this.setState({\n      editMultiplier: !this.state.editMultiplier\n    });\n  }\n\n  onSlide(event) {\n\n    let newArray = this.state.questions\n    newArray[this.state.index].value = event.target.value;\n    this.setState({ questions: newArray }); // update questions\n\n    let additionalPlannedHours2 = 0;\n    this.state.questions.forEach((question) => {\n\n      additionalPlannedHours2 = parseInt(additionalPlannedHours2) + parseInt(question.value) * parseInt(question.multiplier);\n\n    });\n    this.setState({ additionalPlannedHours: additionalPlannedHours2 }, this.updateStandardBaseHours);//update additional planned hours\n    \n  }\n\n  handlePrevious() {\n    this.setState({ index: this.state.index - 1 < 0 ? this.state.questions.length - 1 : this.state.index - 1 });\n  }\n  handleNext() {\n    this.setState({ index: this.state.index + 1 > this.state.questions.length - 1 ? 0 : this.state.index + 1 });\n  }\n\n  handleMultiplierChange(event) {\n    let newArray = this.state.questions\n    newArray[this.state.index].multiplier = event.target.value;\n    this.setState({ questions: newArray }); // update questions\n\n    let additionalPlannedHours2 = 0;\n    this.state.questions.forEach((question) => {\n\n      additionalPlannedHours2 = additionalPlannedHours2 + question.value * question.multiplier;\n\n    });\n    this.setState({ additionalPlannedHours: additionalPlannedHours2 }, this.updateStandardBaseHours);//update additional planned hours\n  }\n\n  handleEssentialChange(index, event) {\n    let newArray = this.state.EssentialHours;\n    newArray[index] = event.target.value;\n    let totalHours = 0;\n    newArray.forEach((item)=> {\n      totalHours += item;\n    });\n    this.setState({EssentialHours: newArray, essentialPlannedHours : totalHours}, this.updateStandardBaseHours);\n  }\n\n  sessionRecord() {\n    let data = [];\n\n    let state = this.state;\n\n    data.push({\n\n      standardLXPProjectHours: state.standardHours,\n      StandardBaseHoursRatio: state.SBHratio,\n      essentialPlannedHours: state.essentialPlannedHours,\n      additionalPlannedHours: state.additionalPlannedHours,\n      question1: state.questions[0].value,\n      question2: state.questions[1].value,\n      question3: state.questions[2].value,\n      question4: state.questions[3].value,\n      question5: state.questions[4].value,\n      question6: state.questions[5].value,\n      question7: state.questions[6].value,\n      question8: state.questions[7].value,\n      question9: state.questions[8].value,\n      question10: state.questions[9].value,\n      question11: state.questions[10].value,\n      question12: state.questions[11].value,\n      question13: state.questions[12].value,\n      question14: state.questions[13].value,\n      question15: state.questions[14].value,\n      question16: state.questions[15].value,\n      question17: state.questions[16].value,\n      essential1: state.EssentialHours[0],\n      essential2: state.EssentialHours[1],\n      essential3: state.EssentialHours[2],\n      essential4: state.EssentialHours[3],\n      essential5: state.EssentialHours[4],\n      essential6: state.EssentialHours[5]\n\n    });\n\n    \n\n    this.setState({sessionRecord: data});\n  }\n\n  render() {\n    //let multiplierSection = this.state.editMultiplier ? \"row lxp-multipler-btn col-xl-4\" : \"row lxp-multipler-btn col-xl-4 hidden\";\n    let index = this.state.index;\n    let questions = this.state.questions;\n\n    return (\n      <div className=\"app\">\n\n        <header>\n          <h1>CURIO</h1>\n        </header>\n\n        <h2>LXP - hours calculator</h2>\n        <div class=\"row\">\n\n          <Dashboard essentialPlannedHours={this.state.essentialPlannedHours} \n          SBHratio={this.state.SBHratio}\n          additionalPlannedHours={this.state.additionalPlannedHours}\n          standardHours = {this.state.standardHours}\n          editMultiplier={this.state.editMultiplier}\n          onChange={this.handleStandardHoursChange} />\n\n          <section className=\"lxp-controls lx-controls-additional container \">\n\n            <Controls\n              index={index}\n              value={questions[index].value}\n              multiplier={questions[index].multiplier}\n              editMultiplier={this.state.editMultiplier}\n              multiplierChange={this.handleMultiplierChange}\n              onSlide={this.onSlide} />\n\n              <div className=\"row\">\n                <div className=\"col-2\"><button className=\"btn btn-primary\" onClick={this.handlePrevious}>Previous</button></div>\n                <div className=\"col-8\"><p className=\"lxp-page-number\">{this.state.index} of {this.state.questions.length}</p></div>\n                <div className=\"col-2\"><button className=\"btn btn-primary\" onClick={this.handleNext}>Next</button></div>\n              </div>\n\n          </section>\n\n          <section className=\"lxp-controls container\">\n            <h3>Essential hours</h3>\n            {this.state.EssentialHours.map((item, i) => {\n              return <EssentialControls index={i} value={this.state.EssentialHours[i]} onChange={this.handleEssentialChange}/>\n            })}\n            \n          </section>\n\n        </div>\n\n        <footer className=\"container\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h3 className=\"display-12\" >Edit multiplier:</h3>\n              <label className=\"switch\">\n                <input type=\"checkbox\" onChange={this.handleEditChange} />\n                <span className=\"slider round\"></span>\n              </label>\n            </div>\n            <div className=\"card-body\">\n              <ExportToExcel csvData={this.state.sessionRecord} fileName={\"sessionRecord\"}/>\n            </div>\n          </div>\n          <p>We acknowledge and pay respect to the traditional custodians of the land in which we live, learn, and work.</p>\n          <p>\t&#169; 2020 Curio Group PTY LTD</p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './styles/bootstrap/css/bootstrap.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}